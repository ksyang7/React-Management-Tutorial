[{"/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/index.js":"1","/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/App.js":"2","/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/reportWebVitals.js":"3","/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/components/Customer.js":"4","/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/components/CustomerAdd.js":"5","/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/components/CustomerDelete.js":"6"},{"size":685,"mtime":1611050645453,"results":"7","hashOfConfig":"8"},{"size":6443,"mtime":1611051695094,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608842639348,"results":"10","hashOfConfig":"8"},{"size":871,"mtime":1610697034703,"results":"11","hashOfConfig":"8"},{"size":4502,"mtime":1611048571364,"results":"12","hashOfConfig":"8"},{"size":1901,"mtime":1611050966678,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1q0qqxe",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/index.js",[],["28","29"],"/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/App.js",[],"/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/reportWebVitals.js",[],"/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/components/Customer.js",[],"/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/components/CustomerAdd.js",["30","31"],"import React from 'react';\nimport { post } from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    hidden: {\n        display: 'none'\n    }\n});\n\nclass CustomerAdd extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        }\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        \n        this.addCustomer()\n            .then((response) => {\n                console.log(response.data);\n                this.props.stateRefresh();\n            }) \n        this.setState({\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',      \n            open: false\n        })\n        \n    }\n\n\n    handleFileChange = (e) => {\n        this.setState({\n            file: e.target.files[0], \n            fileName : e.target.value\n        });\n    }\n\n    handleValueChange = (e) => {\n        let nextState ={};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    addCustomer =() => {\n        const url =\"/api/customers\";\n        const formData = new FormData();\n        formData.append('image', this.state.file);\n        formData.append('name', this.state.userName);\n        formData.append('birthday', this.state.birthday);\n        formData.append('gender', this.state.gender);\n        formData.append('job', this.state.job);\n        const config ={\n            headers: {\n                'content-type' : 'multipart/form-data'\n            }\n        }\n        return post(url, formData, config);\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            file: null,\n            userName: '',\n            birthday: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n                    고객 추가하기\n                </Button>\n                <dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle>고객 추가</DialogTitle>\n                    <DialogContent>\n                        <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /> <br/>\n                        <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\n                                {this.state.fileName == \"\" ? \"프로필 이미지 선택\" : this.state.fileName}\n                            </Button>\n                        </label>\n                        <br/>\n                        <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /> <br/>\n                        <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /> <br/>\n                        <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /> <br/>\n                        <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /> <br/>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit} >추가</Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose} >닫기</Button>\n                    </DialogActions>\n                </dialog> \n\n            </div>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(CustomerAdd); ","/Users/seungeun-yang/workspace/NodeJS/ReactProjectTutorial/management/client/src/components/CustomerDelete.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":112,"column":54,"nodeType":"42","messageId":"43","endLine":112,"endColumn":56},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Dialog' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]